% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write.CLDF.R
\name{write_CLDF}
\alias{write_CLDF}
\title{Serialize a list of data frame (representing for instance a dictionary
or a corpus of interlinear glossed texts) following the CLDF specifications.}
\usage{
write_CLDF(l, dir = ".", newdir = "CLDF", meta = create_CLDF_metadata(l))
}
\arguments{
\item{l}{a list of data frame}

\item{dir}{length-1 character vector: the directory to use}

\item{newdir}{length-1 character vector: a directory to be created (into dir) containing the created files}

\item{meta}{a tree of list expressing the metadata and ready to be serialized with jsonlite::toJSON. See \link{create_CLDF_metadata} for easily generating metadata. Can be NULL to skip writting a metadata file. 
\link{create_CLDF_metadata} can be used to generate a skeleton of default values to be further refined and passed to the meta parameter.}
}
\description{
Serialize a list of data frame (representing for instance a dictionary
or a corpus of interlinear glossed texts) following the CLDF specifications.
}
\examples{
# serializing with CLDF using the default metadata values (thanks to the class attribute)
path <- system.file("exampleData", "tuwariDictionary.lift", package="interlineaR")
dictionary <- read.lift(path, vernacular.languages="tww", simplify=TRUE)
#write_CLDF(dictionary)

# serializing with overriding the defaults
meta <- create_CLDF_metadata(dictionary)
meta$tables[[2]]$`dc:conformsTo` <- "http://cldf.clld.org/v1.0/terms.rdf#SenseTable"
#write_CLDF(dictionary, meta=meta)

}
\references{
http://cldf.clld.org https://github.com/cldf/cldf/
}
