% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lift.specifications.R
\name{lift-format}
\alias{lift-format}
\alias{entry.fields.spec}
\alias{lift-format}
\alias{sense.fields.spec}
\alias{lift-format}
\alias{example.fields.spec}
\alias{lift-format}
\alias{relation.fields.spec}
\title{Information about the structure of the LIFT XML format in order to easily
generate XPath expression and extract information.}
\usage{
entry.fields.spec()

sense.fields.spec()

example.fields.spec()

relation.fields.spec()
}
\value{
a data.frame

a data.frame

a data.frame

a data.frame
}
\description{
There are four fonctions: one for each table to be built (entries, senses, examples, relations).
}
\details{
Each functions return a table with the following columns:
A name for this field
"Path": an XPath expression toward an element.
"Type" how to retreive the content of this element in some frequent cases:
- "form" indicates that the content is in ./form/text; form contains an attribute @lang
   with either vernacular languages code(s), or analysis language code(s).
   In this case, the Sub-type column state vernacular of analysis accordingly.
- "trait" indicate that the content is in a @value attribute;
   the trait has a "name" attribute give in the Sub-type column.
- "gloss" is similar to "form" above.
"Sub-type": in the cases where Type has the values "form" or "gloss", indicats if
   @lang is vernacular ou analysis;
   in the cases where Type has the value "trait" : the value of @name.
"Concat" an XPath expression for building the value with the element using XPath concat()
"Collapse": TRUE = element may appears several time and have to be collapsed
   in order to build the cell value.
}
